#!/usr/bin/env ruby
# encoding: utf-8

usage_string = <<-'MSG'
flaky [count] ios[test_name]

flaky 1 ios[sign_in]
  Run the sign in test one time

flaky 3 ios
  Run all iOS tests up to 3 times
  If one run passes or 3 runs fail, then we move onto the next test.
MSG

raise usage_string unless ARGV && ARGV.length === 2

require File.expand_path '../../lib/flaky', __FILE__

# flaky 1 ios[test_name]

count = ARGV.first

single_test_match = ARGV.last.match(/(.+)\[(.*)\]$/)
all_tests_match = ARGV.last.match(/(.+)$/)

if single_test_match
  # we're not using full, however we have to capture it anyway.
  full, os, test_name = single_test_match.to_a # rake ios[Ok] => ["ios[Ok]", "ios", "Ok"]
  name = File.basename test_name, '.*'
  puts "Running #{name} #{count}x"
  Flaky.run_one_test count: count, os: os, name: test_name
elsif all_tests_match
  os = all_tests_match.to_a.last
  puts "Running all #{os} tests #{count}x"
  Flaky.run_all_tests count: count, os: os
else
  puts usage_string
  exit
end